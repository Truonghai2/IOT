<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Devices - IoT Monitoring System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css" rel="stylesheet">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="/">IoT Monitoring System</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link active" href="/devices">Devices</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <div class="row mb-4">
            <div class="col-md-6">
                <h2>Devices</h2>
            </div>
            <div class="col-md-6 text-end">
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addDeviceModal">
                    <i class="fa fa-plus"></i> Add Device
                </button>
            </div>
        </div>

        <div class="row">
            {% for device in devices %}
            <div class="col-md-4 mb-4">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">{{ device.name }}</h5>
                        <span class="badge {% if device.status == 1 %}bg-success{% else %}bg-danger{% endif %}">
                            {{ device.status == 1 ? "ON" : "OFF" }}
                        </span>
                    </div>
                    <div class="card-body">
                        <p class="card-text">
                            <strong>Type:</strong> {{ device.type }}<br>
                            <strong>IP:</strong> {{ device.esp_ip }}<br>
                            <strong>Last Seen:</strong> {{ device.last_seen_at ? device.last_seen_at|date('Y-m-d H:i:s') : 'Never' }}
                        </p>
                        <div class="btn-group">
                            <a href="/devices/{{ device.id }}" class="btn btn-info btn-sm">
                                <i class="fa fa-eye"></i> View
                            </a>
                            <button type="button" class="btn btn-warning btn-sm" onclick="editDevice('{{ device.id }}')">
                                <i class="fa fa-edit"></i> Edit
                            </button>
                            <button type="button" class="btn btn-danger btn-sm" onclick="deleteDevice('{{ device.id }}')">
                                <i class="fa fa-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>
                
            </div>
            {% endfor %}
        </div>
    </div>

    <!-- Add Device Modal -->
    <div class="modal fade" id="addDeviceModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Device</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="addDeviceForm">
                        <div class="mb-3">
                            <label for="name" class="form-label">Device Name</label>
                            <input type="text" class="form-control" id="name" name="name" required>
                        </div>
                        <div class="mb-3">
                            <label for="esp_ip" class="form-label">ESP IP Address</label>
                            <input type="text" class="form-control" id="esp_ip" name="esp_ip" required>
                        </div>
                        <div class="mb-3">
                            <label for="type" class="form-label">Device Type</label>
                            <input type="text" class="form-control" id="type" name="type" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="addDevice()">Add Device</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.onesignal.com/sdks/web/v16/OneSignalSDK.page.js" async></script>
    <script src="https://js.pusher.com/7.2/pusher.min.js"></script>
    <script>
        function addDevice() {
            const form = document.getElementById('addDeviceForm');
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            fetch('/api/devices', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                alert(data)
                if (data.error) {
                    alert(data.error);
                } else {
                    location.reload();
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while adding the device');
            });
        }

        function editDevice(id) {
            // TODO: Implement edit device functionality
        }

        function deleteDevice(id) {
            if (confirm('Are you sure you want to delete this device?')) {
                fetch(`/api/devices/${id}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        alert(data.error);
                    } else {
                        location.reload();
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while deleting the device');
                });
            }
        }

        // Bọc toàn bộ logic mới vào DOMContentLoaded
        document.addEventListener('DOMContentLoaded', function() {
            // --- OneSignal Logic (giữ nguyên) ---
            window.OneSignalDeferred = window.OneSignalDeferred || [];
            OneSignalDeferred.push(async function (OneSignal) {
                await OneSignal.init({
                    appId: "f41bdea2-508a-4082-9951-e77411fa9f53",
                    serviceWorkerPath: '/OneSignalSDKWorker.js',
                    serviceWorkerUpdaterPath: '/OneSignalSDKUpdaterWorker.js',
                    autoResubscribe: true,
                });

                const user_id = await OneSignal.User.PushSubscription.id;
                console.log(user_id)
                await fetch('/api/subscriptions', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ user_id })
                });
            });

            // --- Pusher & Fire Alert Logic ---
            Pusher.logToConsole = true; // Bật log để debug

            const pusher = new Pusher('57030bb72296d60cd497', { cluster: 'ap1' });
            const channel = pusher.subscribe('device-channel');
            let fireAlertInterval = null;

            // Hàm hiển thị cảnh báo
            function showFireAlert(data) {
                const overlay = document.getElementById('fireAlertOverlay');
                const messageEl = document.getElementById('fireAlertMessage');
                const deviceName = data.device_name || `Thiết bị ID: ${data.device_id}`;
                messageEl.innerHTML = `<strong>Tại thiết bị: ${deviceName}</strong><br>Nhiệt độ: ${data.temperature}°C, Gas: ${data.gas}, Khói: ${data.smoke}`;
                overlay.style.display = 'flex';
            }

            // Hàm ẩn cảnh báo và dừng gửi thông báo
            function hideFireAlert() {
                const overlay = document.getElementById('fireAlertOverlay');
                overlay.style.display = 'none';
                if (fireAlertInterval) {
                    clearInterval(fireAlertInterval);
                    fireAlertInterval = null;
                }
            }
            document.getElementById('handleFireAlertBtn').addEventListener('click', hideFireAlert);

            // Lắng nghe sự kiện từ Pusher
            channel.bind('sensor_update', function(data) {
                // Nếu có cảnh báo cháy và chưa có interval nào đang chạy
                if (data.ai_prediction == 2 && !fireAlertInterval) {
                    // 1. Hiển thị cảnh báo ngay lập tức
                    showFireAlert(data);
                    
                    // 2. Bắt đầu vòng lặp gửi lại thông báo sau mỗi 2 giây
                    fireAlertInterval = setInterval(() => {
                        // Gọi API để backend gửi lại thông báo OneSignal
                        fetch(`/api/devices/${data.device_id}/resend-notification`, { method: 'POST' });
                    }, 2000);
                }
            });
        });
    </script>

    <!-- Lớp phủ cảnh báo cháy -->
    <div id="fireAlertOverlay" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(220, 53, 69, 0.9); z-index: 9999; color: white; text-align: center; flex-direction: column; justify-content: center; align-items: center;">
        <div style="font-size: 5rem; font-weight: bold; text-shadow: 2px 2px 4px #000;">
            <i class="fa fa-fire" aria-hidden="true"></i> CẢNH BÁO CHÁY!
        </div>
        <div id="fireAlertMessage" style="font-size: 1.5rem; margin-top: 20px;"></div>
        <button id="handleFireAlertBtn" style="margin-top: 40px; padding: 15px 30px; font-size: 1.5em; cursor: pointer; border: none; border-radius: 5px; background-color: #28a745; color: white;">Đã xử lý</button>
    </div>

</body>
</html> 